namespace: staging

image:
  repository: 274236163287.dkr.ecr.ap-northeast-2.amazonaws.com/aicore-oms-django
  tag: latest
  pullPolicy: Always

secrets:
  # Django
  secretKey:
  adminURL:
  # Database
  databaseDefaultURL:
  databaseAccountsURL:
  databasePortfolioURL:
  # Cache
  cacheDefaultURL:
  cachePriceURL:
  # Celery
  celeryBrokerURL:
  celeryResultBackend:
  # Celery Flower
  celeryFlowerUser:
  celeryFlowerPassword:
  # Litchi
  litchiBackendAPIToken:
  # Litchi Account
  litchiAccountBackendAPIToken:

environmentVariables:
  DJANGO_SETTINGS_MODULE: oms.settings.production
  DJANGO_ALLOWED_HOSTS: ".fountinvestment.com,.fountaicore.com,.fount.co,oms-staging-django.staging"
  DJANGO_SECURE_SSL_REDIRECT: "False"
  WEB_CONCURRENCY: 4
  CELERY_WORKER_AUTOSCALE_MIN: 1
  CELERY_WORKER_AUTOSCALE_MAX: 4
  TR_BACKEND_KB_HOST: http://kb-tr-staging.fountaicore.com:8080
  INFOMAX_BACKEND_API_HOST: https://infomax-staging.fountaicore.com
  LITCHI_BACKEND_API_HOST: https://dev-litchi.fount.co
  LITCHI_ACCOUNT_BACKEND_API_HOST: https://dev-litchi-account.fount.co
  IS_DOC_ENABLED: "True"
  SENTRY_DSN: https://ce07d01b137440a0961dd42aece672c5@o556859.ingest.sentry.io/5903426
  SENTRY_ENVIRONMENT: staging
  SENTRY_TRACES_SAMPLE_RATE: 0.05
  DATABASE_DEFAULT_CONN_MAX_AGE: 60

web:
  replicaCount: 2
  budget:
    minAvailable: 1
  resources:
    limits:
      cpu: 800m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 256Mi
  nodeSelector:
    selected-app: oms-staging
  tolerations: []
  affinity: {}
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 5
    timeoutSeconds: 2
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2

worker:
  replicaCount: 4
  budget:
    minAvailable: 1
  resources:
    limits:
      cpu: 800m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 256Mi
  nodeSelector:
    selected-app: oms-staging
  tolerations: []
  affinity: {}
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 5
    timeoutSeconds: 2
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

serviceWeb:
  type: NodePort
  port: 5000

serviceFlower:
  type: NodePort
  port: 5555

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/scheme: internal
  hosts:
    - host: oms-staging.fountaicore.com
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: ssl-redirect
              port:
                name: use-annotation
        - path: /flower/*
          backend:
            service:
              name: oms-staging-django-flower
              port:
                number: 5555
        - path: /*
          backend:
            service:
              name: oms-staging-django
              port:
                number: 5000
