from django.conf.urls import url
from rest_framework import routers

from api.versioned.v1.contracts.views import (
    AddressViewSet,
    AssetChartViewSet,
    ContractViewSet,
    ContractAccountViewSet,
    ContractPensionViewSet,
    ExtraViewSet,
    ProvisionalContractViewSet,
    RebalancingQueueViewSet,
    TermViewSet,
    TermDetailViewSet,
    TransferViewSet,
    UserViewSet,
    VendorViewSet,
    VendorThirdPartyViewSet,
    VendorTokenViewSet,
)

router = routers.SimpleRouter(trailing_slash=False)
router.register(r'terms', TermViewSet)
router.register(r'termdetails', TermDetailViewSet)

urlpatterns = router.urls
urlpatterns += [
    url(r'^$', ContractViewSet.as_view({'get': 'list', 'post': 'create'})),
    url(r'^normalize/(?P<pk>[0-9a-f-]+)$', ContractViewSet.as_view({'post': 'normalize_contract'})),
    url(r'^simple$', ContractViewSet.as_view({'get': 'simple_list'})),
    url(r'^user$', UserViewSet.as_view({'get': 'retrieve'})),
    url(r'^available_cancel$', UserViewSet.as_view({'get': 'cancel'})),
    url(r'^(?P<pk>[0-9a-f-]+)$',
        ContractViewSet.as_view({'get': 'retrieve', 'delete': 'destroy', 'put': 'partial_update'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/history$', ContractViewSet.as_view({'get': 'account_history_list'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/agree$', ContractViewSet.as_view({'get': 'account_agree'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/register$',
        ContractViewSet.as_view({'post': 'order_proxy_register', 'delete': 'order_proxy_destroy'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/order/status$', ContractViewSet.as_view({'get': 'account_order_status'})),
    url(r'^(?P<pk>[0-9a-f-]+)/settlement$', ContractViewSet.as_view({'get': 'settlement_list'})),
    url(r'^(?P<pk>[0-9a-f-]+)/card/history$', ContractViewSet.as_view({'get': 'card_history_list'})),
    url(r'^(?P<pk>[0-9a-f-]+)/card/amount$', ContractViewSet.as_view({'get': 'card_amount_list'})),
    url(r'^(?P<pk>[0-9a-f-]+)/card/own$', ContractViewSet.as_view({'get': 'card_isown'})),
    url(r'^(?P<pk>[0-9a-f-]+)/card/status$', ContractViewSet.as_view({'get': 'card_status'})),
    url(r'^(?P<pk>[0-9a-f-]+)/sync$', ContractViewSet.as_view({'get': 'sync_status', 'post': 'open_account_status'})),
    url(r'^(?P<pk>[0-9a-f-]+)/chart$', AssetChartViewSet.as_view({'get': 'retrieve'})),  # 하위호환용으로 남겨둠.
    url(r'^(?P<pk>[0-9a-f-]+)/charts$', AssetChartViewSet.as_view({'get': 'amount'})),
    url(r'^(?P<contract_id>[0-9a-f-]+)/extra$', ExtraViewSet.as_view({'get': 'retrieve', 'put': 'partial_update'})),
    url(r'^(?P<contract_id>[0-9a-f-]+)/transfer$', TransferViewSet.as_view({'get': 'retrieve', 'delete': 'destroy'})),
    url(r'^vendors$', VendorViewSet.as_view({'get': 'list'})),
    url(r'^vendors/token$', VendorTokenViewSet.as_view({'post': 'get_user_token'})),
    url(r'^(?P<pk>[0-9a-f-]+)/vendors/token$', VendorTokenViewSet.as_view({'get': 'get_contract_token'})),
    url(r'^provisional$', ProvisionalContractViewSet.as_view({'get': 'list'})),
    url(r'^provisional/(?P<contract_id>[0-9a-f-]+)$',
        ProvisionalContractViewSet.as_view({'get': 'retrieve', 'delete': 'destroy', 'put': 'partial_update'})),
    url(r'^rebalancing/queue$', RebalancingQueueViewSet.as_view({'post': 'create'})),
    url(r'^rebalancing/queue/(?P<contract_id>[0-9a-f-]+)$', RebalancingQueueViewSet.as_view({'get': 'list'})),
    url(r'^rebalancing/queue/(?P<contract_id>[0-9a-f-]+)/last$', RebalancingQueueViewSet.as_view({'get': 'retrieve'})),
    url(r'^transfer$', TransferViewSet.as_view({'post': 'create'})),
    url(r'^(?P<pk>[0-9a-f-]+)/third-party$',
        VendorThirdPartyViewSet.as_view({'get': 'register_third_party_agreement'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/vendors$',
        ContractPensionViewSet.as_view({'get': 'list_vendor'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/pension/limit$',
        ContractPensionViewSet.as_view({'post': 'update_limit', 'get': 'retrieve_limit'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/pension/available-limit$',
        ContractPensionViewSet.as_view({'get': 'retrieve_available_limit'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/pension/receipt$',
        ContractPensionViewSet.as_view({'get': 'retrieve_receipt'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/third_party/market$',
        VendorThirdPartyViewSet.as_view({'post': 'register_global_onemarket'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/third_party/advisory$',
        VendorThirdPartyViewSet.as_view({'post': 'register_advisory'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/address/search$',
        AddressViewSet.as_view({'post': 'search_address'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/address/search/serial$',
        AddressViewSet.as_view({'post': 'search_address_serial'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/auth/identification$',
        ContractAccountViewSet.as_view({'post': 'auth_identification'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/open/status',
        ContractAccountViewSet.as_view({'put': 'update_account_open_status', 'get': 'retrieve_account_open_status'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/identification/ocr$',
        ContractAccountViewSet.as_view({'post': 'ocr_id_card'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/identification/validate$',
        ContractAccountViewSet.as_view({'post': 'validate_id_card'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/customer/register$',
        ContractAccountViewSet.as_view({'post': 'register_customer'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/open$',
        ContractAccountViewSet.as_view({'post': 'open_account'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/password/validate$',
        ContractAccountViewSet.as_view({'post': 'validate_account_open_password'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/verification$',
        ContractAccountViewSet.as_view({'post': 'validate_account'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/verification/certification$',
        ContractAccountViewSet.as_view({'post': 'validate_account_certification'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/verification/register$',
        ContractAccountViewSet.as_view({'post': 'validate_account_register'})),
    url(r'^(?P<pk>[0-9a-f-]+)/account/verification/elw$',
        ContractAccountViewSet.as_view({'post': 'validate_account_elw'})),
]
